// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "<Pending>")]
[assembly: SuppressMessage("Design", "CA1001:Types that own disposable fields should be disposable", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Utils.AstJson.Visitor")]
[assembly: SuppressMessage("Build", "CA1003:Change the event handler", Justification = "<Pending>")]
[assembly: SuppressMessage("Design", "CA1008:Enums should have zero value", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.Options.SecurityPolicy")]
[assembly: SuppressMessage("Design", "CA1010:Generic interface should also be implemented", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.API.GlobalThis")]
[assembly: SuppressMessage("Design", "CA1010:Generic interface should also be implemented", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.API.JSONObject")]
[assembly: SuppressMessage("Design", "CA1010:Generic interface should also be implemented", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.API.ConcurrentJsObject")]
[assembly: SuppressMessage("Design", "CA1010:Generic interface should also be implemented", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.API.JsObject")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Scanner.TestRegExp(System.String,System.String)~System.Text.RegularExpressions.Regex")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Scanner.TestRegExp(System.String,System.String)~System.Text.RegularExpressions.Regex")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Scanner.TestRegExp(System.String,System.String)~System.Text.RegularExpressions.Regex")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.Interop.DefaultValueConverter.TryConvertValue(System.Object,System.Type,System.Object@)~System.Boolean")]
[assembly: SuppressMessage("Design", "CA1032:Implement standard exception constructors", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.TopazException")]
[assembly: SuppressMessage("Design", "CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.API.ConcurrentJsObject.Tenray#Topaz#API#IJsObject#UnwrapObject(Tenray.Topaz.Core.ScriptExecutor)")]
[assembly: SuppressMessage("Design", "CA1032:Implement standard exception constructors", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.ParserException")]
[assembly: SuppressMessage("Design", "CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.API.ConcurrentJsObject.Tenray#Topaz#API#IJsObject#IsPrototypeProperty(System.Object)~System.Boolean")]
[assembly: SuppressMessage("Design", "CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.API.JsObject.Tenray#Topaz#API#IJsObject#UnwrapObject(Tenray.Topaz.Core.ScriptExecutor)")]
[assembly: SuppressMessage("Design", "CA1033:Interface methods should be callable by child types", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.API.JsObject.Tenray#Topaz#API#IJsObject#IsPrototypeProperty(System.Object)~System.Boolean")]
[assembly: SuppressMessage("Design", "CA1051:Do not declare visible instance fields", Justification = "<Pending>")]
[assembly: SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Ast.TemplateElement.TemplateElementValue")]
[assembly: SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Utils.AstJson.Options")]
[assembly: SuppressMessage("Design", "CA1062:Validate arguments of public methods", Justification = "<Pending>")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.API.JsArray.sort(System.Func{System.Object,System.Object,System.Object})~Tenray.Topaz.API.IJsArray")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.CreateError(System.String,System.Object[])~Esprima.ParserException")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.TolerateError(System.String,System.Object[])")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.Interop.DefaultValueConverter.TryConvertValue(System.Object,System.Type,System.Object@)~System.Boolean")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.UnexpectedTokenError(Esprima.Token,System.String)~Esprima.ParserException")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.UnexpectedTokenError(Esprima.Token,System.String)~Esprima.ParserException")]
[assembly: SuppressMessage("Globalization", "CA1307:Specify StringComparison for clarity", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Location.Equals(Esprima.Location)~System.Boolean")]
[assembly: SuppressMessage("Globalization", "CA1307:Specify StringComparison for clarity", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Location.GetHashCode~System.Int32")]
[assembly: SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>")]
[assembly: SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>")]
[assembly: SuppressMessage("Globalization", "CA1307:Specify StringComparison for clarity", Justification = "<Pending>")]
[assembly: SuppressMessage("Globalization", "CA1308:Normalize strings to uppercase", Justification = "<Pending>")]
[assembly: SuppressMessage("Usage", "CA2201:Do not raise reserved exception types", Justification = "<Pending>")]
[assembly: SuppressMessage("Naming", "CA1716:Identifiers should not match keywords", Justification = "<Pending>")]
[assembly: SuppressMessage("Performance", "CA1819:Properties should not return arrays", Justification = "<Pending>")]
[assembly: SuppressMessage("Performance", "CA1806:Do not ignore method results", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Scanner.TestRegExp(System.String,System.String)~System.Text.RegularExpressions.Regex")]
[assembly: SuppressMessage("Performance", "CA1806:Do not ignore method results", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Scanner.TestRegExp(System.String,System.String)~System.Text.RegularExpressions.Regex")]
[assembly: SuppressMessage("Performance", "CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Ast.NodeCollection")]
[assembly: SuppressMessage("Performance", "CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Ast.NodeList`1")]
[assembly: SuppressMessage("Performance", "CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.OctalValue")]
[assembly: SuppressMessage("Performance", "CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.OctalValue")]
[assembly: SuppressMessage("Naming", "CA1725:Parameter names should match base declaration", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.Interop.GenericMethodSelector.TrySetObjectMember(System.Object,System.Object,System.Object,System.Boolean)~System.Boolean")]
[assembly: SuppressMessage("Naming", "CA1725:Parameter names should match base declaration", Justification = "<Pending>", Scope = "member", Target = "~M:Tenray.Topaz.Interop.GenericMethodSelector.TryGetObjectMember(System.Object,System.Object,System.Object@,System.Boolean)~System.Boolean")]
[assembly: SuppressMessage("Naming", "CA1724:Type names should not match namespaces", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Ast.Nodes")]
[assembly: SuppressMessage("Naming", "CA1724:Type names should not match namespaces", Justification = "<Pending>", Scope = "type", Target = "~T:Esprima.Utils.AstJson.Options")]
[assembly: SuppressMessage("Naming", "CA1720:Identifier contains type name", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Utils.JsonWriter.String(System.String)")]
[assembly: SuppressMessage("Naming", "CA1720:Identifier contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:Esprima.Ast.WithStatement.Object")]
[assembly: SuppressMessage("Naming", "CA1710:Identifiers should have correct suffix", Justification = "<Pending>", Scope = "type", Target = "~T:Microsoft.Collections.Extensions.DictionarySlim`2")]
[assembly: SuppressMessage("Naming", "CA1710:Identifiers should have correct suffix", Justification = "<Pending>")]
[assembly: SuppressMessage("Naming", "CA1720:Identifier contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:Esprima.Ast.MemberExpression.Object")]
[assembly: SuppressMessage("Naming", "CA1708:Identifiers should differ by more than case", Justification = "<Pending>", Scope = "type", Target = "~T:Tenray.Topaz.API.JsArray")]
[assembly: SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.Ast.ForOfStatement.#ctor(Esprima.Ast.Node,Esprima.Ast.Expression,Esprima.Ast.Statement,System.Boolean)")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseAssignmentExpression~Esprima.Ast.Expression")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseVariableIdentifier(System.Nullable{Esprima.Ast.VariableDeclarationKind})~Esprima.Ast.Identifier")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseClassElement(System.Boolean@)~Esprima.Ast.ClassProperty")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseClassElement(System.Boolean@)~Esprima.Ast.ClassProperty")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseClassElement(System.Boolean@)~Esprima.Ast.ClassProperty")]
[assembly: SuppressMessage("Maintainability", "CA1508:Avoid dead conditional code", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.JavaScriptParser.ParseClassElement(System.Boolean@)~Esprima.Ast.ClassProperty")]
[assembly: SuppressMessage("Performance", "CA1822:Mark members as static", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.ArrayList`1.AssertUnchanged")]
[assembly: SuppressMessage("Performance", "CA1822:Mark members as static", Justification = "<Pending>", Scope = "member", Target = "~M:Esprima.ArrayList`1.OnChanged")]
